// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: swanlab/proto/record/v1/experiment.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProjectRecord is the record that contains information about a swanlab project.
type ProjectRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the project
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The workspace of the project
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// The visibility of the project
	Public        bool `protobuf:"varint,3,opt,name=public,proto3" json:"public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectRecord) Reset() {
	*x = ProjectRecord{}
	mi := &file_swanlab_proto_record_v1_experiment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRecord) ProtoMessage() {}

func (x *ProjectRecord) ProtoReflect() protoreflect.Message {
	mi := &file_swanlab_proto_record_v1_experiment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRecord.ProtoReflect.Descriptor instead.
func (*ProjectRecord) Descriptor() ([]byte, []int) {
	return file_swanlab_proto_record_v1_experiment_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectRecord) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *ProjectRecord) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

// ExperimentRecord is the record that contains information about a swanlab experiment.
type ExperimentRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the experiment
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the experiment
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The tags of the experiment
	Tags          []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentRecord) Reset() {
	*x = ExperimentRecord{}
	mi := &file_swanlab_proto_record_v1_experiment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentRecord) ProtoMessage() {}

func (x *ExperimentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_swanlab_proto_record_v1_experiment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentRecord.ProtoReflect.Descriptor instead.
func (*ExperimentRecord) Descriptor() ([]byte, []int) {
	return file_swanlab_proto_record_v1_experiment_proto_rawDescGZIP(), []int{1}
}

func (x *ExperimentRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExperimentRecord) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExperimentRecord) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_swanlab_proto_record_v1_experiment_proto protoreflect.FileDescriptor

const file_swanlab_proto_record_v1_experiment_proto_rawDesc = "" +
	"\n" +
	"(swanlab/proto/record/v1/experiment.proto\x12\x17swanlab.proto.record.v1\"Y\n" +
	"\rProjectRecord\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tworkspace\x18\x02 \x01(\tR\tworkspace\x12\x16\n" +
	"\x06public\x18\x03 \x01(\bR\x06public\"\\\n" +
	"\x10ExperimentRecord\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tagsB\rZ\vcore/pkg/pbb\x06proto3"

var (
	file_swanlab_proto_record_v1_experiment_proto_rawDescOnce sync.Once
	file_swanlab_proto_record_v1_experiment_proto_rawDescData []byte
)

func file_swanlab_proto_record_v1_experiment_proto_rawDescGZIP() []byte {
	file_swanlab_proto_record_v1_experiment_proto_rawDescOnce.Do(func() {
		file_swanlab_proto_record_v1_experiment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swanlab_proto_record_v1_experiment_proto_rawDesc), len(file_swanlab_proto_record_v1_experiment_proto_rawDesc)))
	})
	return file_swanlab_proto_record_v1_experiment_proto_rawDescData
}

var file_swanlab_proto_record_v1_experiment_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_swanlab_proto_record_v1_experiment_proto_goTypes = []any{
	(*ProjectRecord)(nil),    // 0: swanlab.proto.record.v1.ProjectRecord
	(*ExperimentRecord)(nil), // 1: swanlab.proto.record.v1.ExperimentRecord
}
var file_swanlab_proto_record_v1_experiment_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_swanlab_proto_record_v1_experiment_proto_init() }
func file_swanlab_proto_record_v1_experiment_proto_init() {
	if File_swanlab_proto_record_v1_experiment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swanlab_proto_record_v1_experiment_proto_rawDesc), len(file_swanlab_proto_record_v1_experiment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_swanlab_proto_record_v1_experiment_proto_goTypes,
		DependencyIndexes: file_swanlab_proto_record_v1_experiment_proto_depIdxs,
		MessageInfos:      file_swanlab_proto_record_v1_experiment_proto_msgTypes,
	}.Build()
	File_swanlab_proto_record_v1_experiment_proto = out.File
	file_swanlab_proto_record_v1_experiment_proto_goTypes = nil
	file_swanlab_proto_record_v1_experiment_proto_depIdxs = nil
}
